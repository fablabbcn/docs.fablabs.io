{
    "docs": [
        {
            "location": "/",
            "text": "Fablabs.io Developer Guide\n\n\nGetting started\n\n\nAuthentication\n\n\nThe API uses \nOAuth2\n for authentication and authorization.\n\n\nThe typical workflow is the following:\n\n\n\n\n\n\nYou register an Application in your fablabs.io account, the system will create for you an Application Identifier and a shared Secret.\n\n\n\n\n\n\nYour application redirects the user to obtain an Authorization Code from the API, passing the Application Identifier, a callback URL, and optionally an unique identifier which represents the user in your app. The shared secret is used for signing the request, so the API knows that it's really your app.\n\n\n\n\n\n\nOnce authenticated, the user is redirected to the callback URL specified before, passing a \ncode\n parameter containing the Authorization Code.\n\n\n\n\n\n\nUsing the Authorization Code your app can request an Access Token from the API, which allows to call it on behalf of the logged in user\n\n\n\n\n\n\nFinally you specify the Access Token in your API Requests via the query \naccess_token\n param or the \nAuthorization\n HTTP Header, using the \nBearer <token>\n syntax\n\n\n\n\n\n\n     +----------+\n     | resource |\n     |   owner  |\n     |          |\n     +----------+\n          ^\n          |\n         (B)\n     +----|-----+          Client Identifier      +---------------+\n     |         -+----(A)-- & Redirection URI ---->|               |\n     |  User-   |                                 | Authorization |\n     |  Agent  -+----(B)-- User authenticates --->|     Server    |\n     |          |                                 |               |\n     |         -+----(C)-- Authorization Code ---<|               |\n     +-|----|---+                                 +---------------+\n       |    |                                         ^      v\n      (A)  (C)                                        |      |\n       |    |                                         |      |\n       ^    v                                         |      |\n     +---------+                                      |      |\n     |         |>---(D)-- Authorization Code ---------'      |\n     |  Client |          & Redirection URI                  |\n     |         |                                             |\n     |         |<---(E)----- Access Token -------------------'\n     +---------+       (w/ Optional Refresh Token)\n\n\n     OAuth Authorization Code Flow (source draft-ietf-oauth-v2-22)\n\n\n\n\nThere are a few client libraries for most programming languages that simplify the OAuth process, please see\nthe \nOAuth client and server implementations\n list.\n\n\nAPI Reference\n\n\nCheck the \nAPI reference\n, based on swagger definition, to try out the API\nfrom your browser.\n\n\nContributing\n\n\nSetting up the development environment\n\n\nUsing Docker & Docker-composer\n\n\nClone the official repository\n\n\ngit clone https://github.com/fablabbcn/fablabs.io.git\n\n\n\n\nStart the project:  \n\n\ndocker-compose up web app\n\n\n\n\nCreate database (only the first time):  \n\n\n docker-compose exec app rake db:setup\n docker-compose exec app /usr/local/bin/bower install\n\n\n\n\nAdd the following lines to your \n/etc/hosts\n:\n\n\n     127.0.0.1   www.fablabs.local\n     127.0.0.1   api.fablabs.local\n\n\n\n\nUsing Ubuntu",
            "title": "Fablabs.io Developer Guide"
        },
        {
            "location": "/#fablabsio-developer-guide",
            "text": "",
            "title": "Fablabs.io Developer Guide"
        },
        {
            "location": "/#getting-started",
            "text": "",
            "title": "Getting started"
        },
        {
            "location": "/#authentication",
            "text": "The API uses  OAuth2  for authentication and authorization.  The typical workflow is the following:    You register an Application in your fablabs.io account, the system will create for you an Application Identifier and a shared Secret.    Your application redirects the user to obtain an Authorization Code from the API, passing the Application Identifier, a callback URL, and optionally an unique identifier which represents the user in your app. The shared secret is used for signing the request, so the API knows that it's really your app.    Once authenticated, the user is redirected to the callback URL specified before, passing a  code  parameter containing the Authorization Code.    Using the Authorization Code your app can request an Access Token from the API, which allows to call it on behalf of the logged in user    Finally you specify the Access Token in your API Requests via the query  access_token  param or the  Authorization  HTTP Header, using the  Bearer <token>  syntax         +----------+\n     | resource |\n     |   owner  |\n     |          |\n     +----------+\n          ^\n          |\n         (B)\n     +----|-----+          Client Identifier      +---------------+\n     |         -+----(A)-- & Redirection URI ---->|               |\n     |  User-   |                                 | Authorization |\n     |  Agent  -+----(B)-- User authenticates --->|     Server    |\n     |          |                                 |               |\n     |         -+----(C)-- Authorization Code ---<|               |\n     +-|----|---+                                 +---------------+\n       |    |                                         ^      v\n      (A)  (C)                                        |      |\n       |    |                                         |      |\n       ^    v                                         |      |\n     +---------+                                      |      |\n     |         |>---(D)-- Authorization Code ---------'      |\n     |  Client |          & Redirection URI                  |\n     |         |                                             |\n     |         |<---(E)----- Access Token -------------------'\n     +---------+       (w/ Optional Refresh Token)\n\n\n     OAuth Authorization Code Flow (source draft-ietf-oauth-v2-22)  There are a few client libraries for most programming languages that simplify the OAuth process, please see\nthe  OAuth client and server implementations  list.",
            "title": "Authentication"
        },
        {
            "location": "/#api-reference",
            "text": "Check the  API reference , based on swagger definition, to try out the API\nfrom your browser.",
            "title": "API Reference"
        },
        {
            "location": "/#contributing",
            "text": "",
            "title": "Contributing"
        },
        {
            "location": "/#setting-up-the-development-environment",
            "text": "",
            "title": "Setting up the development environment"
        },
        {
            "location": "/#using-docker-docker-composer",
            "text": "Clone the official repository  git clone https://github.com/fablabbcn/fablabs.io.git  Start the project:    docker-compose up web app  Create database (only the first time):     docker-compose exec app rake db:setup\n docker-compose exec app /usr/local/bin/bower install  Add the following lines to your  /etc/hosts :       127.0.0.1   www.fablabs.local\n     127.0.0.1   api.fablabs.local",
            "title": "Using Docker &amp; Docker-composer"
        },
        {
            "location": "/#using-ubuntu",
            "text": "",
            "title": "Using Ubuntu"
        }
    ]
}